generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BusinessType {
  RETAIL
  SERVICE
  MANUFACTURING
}

model IndividualUser {
  id                 Int      @id @default(autoincrement())
  firstName          String
  lastName           String
  phone              String   @unique
  email              String   @unique
  hash               String
  verificationCode   String? // store the 4-digit verification code
  resetPasswordToken String? // Add the resetPasswordToken field
  googleId           String?
  displayName        String?
  picture            String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  items             Item[]
  portfolio         Portfolio?

  @@map("individual_users")
}

model CorporateUser {
  id                  Int          @id @default(autoincrement())
  companyName         String
  businessType        BusinessType // using the enum
  dateOfIncorporation DateTime
  email               String       @unique
  hash                String
  verificationCode    String? // store the 4-digit verification code
  resetPasswordToken  String? // Add the resetPasswordToken field
  googleId            String?
  displayName         String?
  picture             String?
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt

  items               Item[]
  portfolio           Portfolio?

  @@map("corporate_users")
}

model Item {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  individualUserId Int?
  corporateUserId  Int?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  individualUser IndividualUser? @relation(fields: [individualUserId], references: [id])
  corporateUser  CorporateUser?  @relation(fields: [corporateUserId], references: [id])
}

model Portfolio {
  id               Int    @id @default(autoincrement())
  individualUserId Int?   @unique
  corporateUserId  Int?   @unique
  totalValue       Float  @default(0)
  todayChange      Float  @default(0)

  investments Investment[]

  // Relations: only one of these should be populated.
  individualUser IndividualUser? @relation(fields: [individualUserId], references: [id])
  corporateUser  CorporateUser?  @relation(fields: [corporateUserId], references: [id])
}


model Investment {
  id          Int    @id @default(autoincrement())
  portfolioId Int
  name        String
  quantity    Float
  value       Float

  portfolio Portfolio @relation(fields: [portfolioId], references: [id])
}
